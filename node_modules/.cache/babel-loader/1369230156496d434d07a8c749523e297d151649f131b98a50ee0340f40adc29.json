{"ast":null,"code":"export default function addCommaToNum(number) {\n  const gotNum = String(number).split(\"\");\n  console.log(gotNum);\n  let num = [];\n  let count = 1;\n  if (gotNum.length > 3) {\n    for (let i = gotNum.length - 1; i > -1; i--) {\n      if (count === 4) {\n        num.unshift(gotNum[i] + \",\");\n        count = 1;\n      } else {\n        num.unshift(gotNum[i]);\n        count++;\n      }\n    }\n    console.log(num);\n  }\n}","map":{"version":3,"names":["addCommaToNum","number","gotNum","String","split","console","log","num","count","length","i","unshift"],"sources":["C:/Users/ar913/Downloads/programming-files/React_folder/verant/src/components/addCommaToNum.js"],"sourcesContent":["export default function addCommaToNum(number) {\r\n    const gotNum = String(number).split(\"\"); \r\n    console.log(gotNum)\r\n    let num = [];\r\n    let count = 1;\r\n    if (gotNum.length > 3) {\r\n        for (let i = (gotNum.length - 1); i > -1; i--) {\r\n            if (count === 4) {\r\n                num.unshift(gotNum[i] + \",\")\r\n                count = 1\r\n            } else {\r\n                num.unshift(gotNum[i])\r\n                count++\r\n            }\r\n        }\r\n        console.log(num)\r\n    }\r\n}"],"mappings":"AAAA,eAAe,SAASA,aAAaA,CAACC,MAAM,EAAE;EAC1C,MAAMC,MAAM,GAAGC,MAAM,CAACF,MAAM,CAAC,CAACG,KAAK,CAAC,EAAE,CAAC;EACvCC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;EACnB,IAAIK,GAAG,GAAG,EAAE;EACZ,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIN,MAAM,CAACO,MAAM,GAAG,CAAC,EAAE;IACnB,KAAK,IAAIC,CAAC,GAAIR,MAAM,CAACO,MAAM,GAAG,CAAE,EAAEC,CAAC,GAAG,CAAC,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC3C,IAAIF,KAAK,KAAK,CAAC,EAAE;QACbD,GAAG,CAACI,OAAO,CAACT,MAAM,CAACQ,CAAC,CAAC,GAAG,GAAG,CAAC;QAC5BF,KAAK,GAAG,CAAC;MACb,CAAC,MAAM;QACHD,GAAG,CAACI,OAAO,CAACT,MAAM,CAACQ,CAAC,CAAC,CAAC;QACtBF,KAAK,EAAE;MACX;IACJ;IACAH,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;EACpB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}