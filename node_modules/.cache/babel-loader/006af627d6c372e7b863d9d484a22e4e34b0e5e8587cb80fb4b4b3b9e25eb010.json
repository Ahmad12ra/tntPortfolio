{"ast":null,"code":"export default async function getUserOwnedCharacters(userId) {\n  try {\n    const fet = await fetch(\"http://localhost/verant_apis/getUserOwnedCharacters.php\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId: userId\n      })\n    });\n    const res = await fet.json();\n    if (res.ownedCharacterNames) {\n      console.log(res.ownedCharacterNames);\n    } else return false;\n  } catch (e) {\n    console.log(\"error brother occured!\" + e);\n    return false;\n  }\n}","map":{"version":3,"names":["getUserOwnedCharacters","userId","fet","fetch","method","headers","body","JSON","stringify","res","json","ownedCharacterNames","console","log","e"],"sources":["C:/Users/ar913/Downloads/programming-files/React_folder/verant/src/components/getUserOwnedCharacters.js"],"sourcesContent":["export default async function getUserOwnedCharacters(userId) {\r\n        try {\r\n        const fet = await fetch(\"http://localhost/verant_apis/getUserOwnedCharacters.php\", {\r\n          method: \"POST\",\r\n          headers: {\"content-type\": \"application/json\"},\r\n          body: JSON.stringify({userId: userId})\r\n        })\r\n        const res = await fet.json();\r\n        if (res.ownedCharacterNames) {\r\n            console.log(res.ownedCharacterNames);\r\n        } else return false;\r\n      } catch (e) {\r\n        console.log(\"error brother occured!\" + e);\r\n        return false;\r\n      }\r\n}"],"mappings":"AAAA,eAAe,eAAeA,sBAAsBA,CAACC,MAAM,EAAE;EACrD,IAAI;IACJ,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,yDAAyD,EAAE;MACjFC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACP,MAAM,EAAEA;MAAM,CAAC;IACvC,CAAC,CAAC;IACF,MAAMQ,GAAG,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;IAC5B,IAAID,GAAG,CAACE,mBAAmB,EAAE;MACzBC,OAAO,CAACC,GAAG,CAACJ,GAAG,CAACE,mBAAmB,CAAC;IACxC,CAAC,MAAM,OAAO,KAAK;EACrB,CAAC,CAAC,OAAOG,CAAC,EAAE;IACVF,OAAO,CAACC,GAAG,CAAC,wBAAwB,GAAGC,CAAC,CAAC;IACzC,OAAO,KAAK;EACd;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}